import PropTypes from 'prop-types';
import * as React from 'react';
import { TabPaneProps } from './TabPane';
export interface TabProps extends Omit<TabPaneProps, 'title'> {
    /**
     * Content for the tab title.
     */
    title: React.ReactNode;
    /**
     * The disabled state of the tab.
     */
    disabled?: boolean;
    /**
     * Class to pass to the underlying nav link.
     */
    tabClassName?: string;
    /**
     * Object containing attributes to pass to underlying nav link.
     */
    tabAttrs?: Record<string, any>;
    /**
    * Content to the left of title.
    */
    contentLeft?: React.ReactNode;
    /**
    * Content to the right of title. Not applicable to tabs-info-toggle variant.
    */
    contentRight?: React.ReactNode;
    /**
     * Content to the bottom of title. Applicable to tabs-info-toggle variant only.
     */
    contentBottom?: React.ReactNode;
}
declare const _default: React.FC<TabProps> & {
    Container: {
        ({ transition, ...props }: import("./TabContainer").TabContainerProps): JSX.Element;
        propTypes: {
            id: PropTypes.Requireable<string>;
            transition: PropTypes.Requireable<NonNullable<boolean | PropTypes.ReactComponentLike | null | undefined>>;
            mountOnEnter: PropTypes.Requireable<boolean>;
            unmountOnExit: PropTypes.Requireable<boolean>;
            generateChildId: PropTypes.Requireable<(...args: any[]) => any>;
            onSelect: PropTypes.Requireable<(...args: any[]) => any>;
            activeKey: PropTypes.Requireable<NonNullable<string | number | null | undefined>>;
        };
        displayName: string;
    };
    Content: import("../utils/helpers").BsPrefixRefForwardingComponent<"div", import("../utils/helpers").BsPrefixProps<React.ElementType<any>>>;
    Pane: import("../utils/helpers").BsPrefixRefForwardingComponent<"div", TabPaneProps>;
};
export default _default;
