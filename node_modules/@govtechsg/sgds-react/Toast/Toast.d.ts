import * as React from 'react';
import { TransitionComponent } from '@restart/ui/types';
import { BsPrefixProps, BsPrefixRefForwardingComponent } from '../utils/helpers';
import { Variant } from '../utils/types';
export interface ToastProps extends BsPrefixProps, React.HTMLAttributes<HTMLElement> {
    /**
     * Apply a CSS fade transition to the toast
     */
    animation?: boolean;
    /**
     * Auto hide the toast
     */
    autohide?: boolean;
    /**
     * Delay hiding the toast (ms)
     */
    delay?: number;
    /** Callback triggered once after delay. Use it to set `show` state to false to hide Toast */
    onClose?: (e?: React.MouseEvent | React.KeyboardEvent) => void;
    /** When true, the toast will appear */
    show?: boolean;
    /**
     * A `react-transition-group` Transition component used to animate the Toast on dismissal.
     */
    transition?: TransitionComponent;
    /**
     * Sets Toast background
     *
     */
    bg?: Variant;
    /** When set true, applies SGDS stylings */
    isSGDS?: boolean;
    /**Adds CSS styling to `<Toast />` based on the defined status */
    status?: 'success' | 'warning' | 'danger';
}
declare const _default: BsPrefixRefForwardingComponent<"div", ToastProps> & {
    Body: BsPrefixRefForwardingComponent<"div", BsPrefixProps<React.ElementType<any>>>;
    Header: React.ForwardRefExoticComponent<import("./ToastHeader").ToastHeaderProps & React.RefAttributes<HTMLDivElement>>;
};
export default _default;
