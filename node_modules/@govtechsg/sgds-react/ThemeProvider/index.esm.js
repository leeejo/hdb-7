'use client';
import PropTypes from 'prop-types';
import * as React from 'react';
import { useMemo } from 'react';
import classNames from 'classnames';

const ThemeContext = React.createContext({ prefixes: {} });
const { Consumer, Provider } = ThemeContext;
function ThemeProvider({ prefixes = {}, dir, children }) {
    const contextValue = useMemo(() => ({
        prefixes: { ...prefixes },
        dir,
    }), [prefixes, dir]);
    return React.createElement(Provider, { value: contextValue }, children);
}
ThemeProvider.propTypes = {
    prefixes: PropTypes.object,
    dir: PropTypes.string,
};
React.forwardRef(({ as: Tag = 'div', ...props }, ref) => {
    return React.createElement(Tag, { ref: ref, ...props, className: classNames(props.className, 'sgds') });
});

export { ThemeProvider };
