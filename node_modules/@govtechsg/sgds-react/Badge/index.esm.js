'use client';
import PropTypes from 'prop-types';
import classNames from 'classnames';
import * as React from 'react';
import { useContext } from 'react';

const ThemeContext = React.createContext({ prefixes: {} });
({
    prefixes: PropTypes.object,
    dir: PropTypes.string,
});
function useBootstrapPrefix(prefix, defaultPrefix) {
    const { prefixes } = useContext(ThemeContext);
    return prefix || prefixes[defaultPrefix] || `${defaultPrefix}`;
}
const SGDSWrapper = React.forwardRef(({ as: Tag = 'div', ...props }, ref) => {
    return React.createElement(Tag, { ref: ref, ...props, className: classNames(props.className, 'sgds') });
});

const propTypes = {
    /** @default 'badge' */
    bsPrefix: PropTypes.string,
    /**
     * The visual style of the badge
     *
     * @type {('primary'|'secondary'|'success'|'danger'|'warning'|'info'|'light'|'dark')}
     */
    bg: PropTypes.string,
    /**
     * Add the `pill` modifier to make badges more rounded with
     * some additional horizontal padding
     */
    pill: PropTypes.bool,
    /**
     * Sets badge text color
     *
     * @type {('primary'|'secondary'|'success'|'danger'|'warning'|'info'|'light'|'dark')}
     */
    text: PropTypes.string,
    /** @default span */
    as: PropTypes.elementType,
    textIndicator: PropTypes.bool,
    dotIndicator: PropTypes.bool,
};
const defaultProps = {
    bg: 'primary',
    pill: false,
    textIndicator: false,
    dotIndicator: false
};
const Badge = React.forwardRef(({ bsPrefix, bg, pill, text, className, textIndicator, dotIndicator, as: Component = 'span', ...props }, ref) => {
    const prefix = useBootstrapPrefix(bsPrefix, 'badge');
    return (React.createElement(SGDSWrapper, { as: Component, ref: ref, ...props, className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`, (textIndicator || dotIndicator) && 'position-absolute top-0 start-100 translate-middle', dotIndicator && 'p-2 border border-light rounded-circle') },
        dotIndicator && React.createElement("span", { className: 'visually-hidden' }, "New alerts"),
        props.children));
});
Badge.displayName = 'Badge';
Badge.propTypes = propTypes;
Badge.defaultProps = defaultProps;

export { Badge };
